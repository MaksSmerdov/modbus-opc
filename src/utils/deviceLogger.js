/**
 * –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –≤ –∫–æ–Ω—Å–æ–ª—å
 */

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å
 * @param {Object} device - –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Å –¥–∞–Ω–Ω—ã–º–∏
 */
export function logDeviceData(device) {
  console.log(`\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`);
  console.log(`‚îÇ üìä ${device.name.toUpperCase()} (ID: ${device.slaveId})`);
  console.log(`‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ`);
  
  // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
  for (const [category, params] of Object.entries(device.data)) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const categoryIcon = getCategoryIcon(category);
    
    console.log(`‚îÇ`);
    console.log(`‚îÇ ${categoryIcon} ${category.toUpperCase()}:`);
    
    // –í—ã–≤–æ–¥–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    for (const [key, data] of Object.entries(params)) {
      const valueStr = formatValue(data);
      console.log(`‚îÇ   ‚Ä¢ ${key}: ${valueStr}`);
    }
  }
  
  console.log(`‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n`);
  console.log(`‚è∞ ${new Date().toLocaleString('ru-RU')}`);

}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–∫–æ–Ω–∫—É –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @param {string} category - –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
 * @returns {string} –ò–∫–æ–Ω–∫–∞
 */
function getCategoryIcon(category) {
  const icons = {
    'alarms': 'üö®',
    'info': '‚ÑπÔ∏è',
    'parameters': 'üìà',
    'im': '‚öôÔ∏è',
    'setpoints': 'üéØ',
    'status': 'üì°'
  };
  
  return icons[category] || 'üìÅ';
}

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
 * @param {Object} data - –î–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
 */
function formatValue(data) {
  if (typeof data.value === 'boolean') {
    // –ë—É–ª–µ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è
    return data.value ? '‚úÖ true' : '‚ùå false';
  }
  
  // –ß–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
  let result = `${data.value}`;
  
  if (data.unit) {
    result += ` ${data.unit}`;
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–≤–∞—Ä–∏–∏
  if (data.isAlarm !== undefined) {
    result += data.isAlarm ? ' ‚ö†Ô∏è ALARM' : ' ‚úì';
  }
  
  return result;
}

/**
 * –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –≤—ã–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö (–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞)
 * @param {Object} device - –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ —Å –¥–∞–Ω–Ω—ã–º–∏
 */
export function logDeviceDataCompact(device) {
  const timestamp = new Date().toLocaleTimeString('ru-RU');
  const alarmsCount = countAlarms(device.data);
  const statusIcon = alarmsCount > 0 ? '‚ö†Ô∏è' : '‚úÖ';
  
  console.log(`${statusIcon} [${timestamp}] ${device.name} | –ê–≤–∞—Ä–∏–∏: ${alarmsCount}`);
}

/**
 * –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–≤–∞—Ä–∏–π
 * @param {Object} data - –î–∞–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
 * @returns {number} –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤–∞—Ä–∏–π
 */
function countAlarms(data) {
  let count = 0;
  
  // –°—á–∏—Ç–∞–µ–º –∞–≤–∞—Ä–∏–∏ –∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ alarms
  if (data.alarms) {
    for (const param of Object.values(data.alarms)) {
      if (param.value === true) {
        count++;
      }
    }
  }
  
  // –°—á–∏—Ç–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å isAlarm = true
  for (const category of Object.values(data)) {
    for (const param of Object.values(category)) {
      if (param.isAlarm === true) {
        count++;
      }
    }
  }
  
  return count;
}

