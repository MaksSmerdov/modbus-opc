import { useState } from 'react';
import { Button } from '@/shared/components';
import { 
  useGetPollingStatusQuery, 
  useStartPollingMutation, 
  useStopPollingMutation 
} from '../../api/pollingApi';
import styles from './PollingToggle.module.scss';

const PollingToggle = () => {
  const { data: status } = useGetPollingStatusQuery(undefined, {
    pollingInterval: 3000, // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
  });

  const [startPolling, { isLoading: isStarting }] = useStartPollingMutation();
  const [stopPolling, { isLoading: isStopping }] = useStopPollingMutation();
  const [error, setError] = useState<string | null>(null);

  const isLoading = isStarting || isStopping;
  const isPolling = status?.isPolling ?? false;
  const hasManager = status?.hasManager ?? false;

  const handleToggle = async () => {
    try {
      setError(null);
      
      if (isPolling) {
        await stopPolling().unwrap();
      } else {
        await startPolling().unwrap();
      }
    } catch (err) {
      const errorMessage = err && typeof err === 'object' && 'data' in err 
        ? (err.data as { message?: string }).message || '–û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø—Ä–æ—Å–æ–º'
        : '–û—à–∏–±–∫–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–ø—Ä–æ—Å–æ–º';
      setError(errorMessage);
      
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä—ã–≤–∞–µ–º –æ—à–∏–±–∫—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      setTimeout(() => setError(null), 5000);
    }
  };

  return (
    <div className={styles['polling-toggle']}>
      <Button
        onClick={handleToggle}
        disabled={isLoading || !hasManager}
        variant={isPolling ? 'danger' : 'primary'}
        className={styles['polling-toggle__button']}
        title={
          !hasManager 
            ? 'Modbus –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω' 
            : isPolling 
              ? '–£—Ä–æ–≤–µ–Ω—å 1: –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–ø—Ä–æ—Å –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤' 
              : '–£—Ä–æ–≤–µ–Ω—å 1: –ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–ø—Ä–æ—Å –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤'
        }
      >
        <span className={styles['polling-toggle__indicator']}>
          <span 
            className={`${styles['polling-toggle__dot']} ${
              isPolling ? styles['polling-toggle__dot--active'] : ''
            }`}
          />
        </span>
        <span className={styles['polling-toggle__text']}>
          üåê {isLoading ? '–û–±—Ä–∞–±–æ—Ç–∫–∞...' : isPolling ? '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–ø—Ä–æ—Å' : '–ó–∞–ø—É—Å—Ç–∏—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–ø—Ä–æ—Å'}
        </span>
      </Button>
      
      {error && (
        <div className={styles['polling-toggle__error']}>
          {error}
        </div>
      )}

      {!hasManager && (
        <div className={styles['polling-toggle__warning']}>
          Modbus –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω
        </div>
      )}
    </div>
  );
};

export default PollingToggle;

